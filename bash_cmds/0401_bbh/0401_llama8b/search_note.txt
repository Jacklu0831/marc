based on past runs, each iter adds 0.275min, and everything else takes 13.5 min
decision to search up to 25 is due to efficiency, less time than ttt
=> iters 5 + 10 + 15 + 20 + 25 = 75 => 88.125 for one search over iters
=> set generously 2hrs for an iter search, 2.5hrs wiht lora or prefix

TODO: no compute for randomsearch atm
TODO: no compute for lora or prefix atm (need to implement lora too so)
TODO: use seed45 for now, expand to more seeds if compute allows


calculation for randomsearch
- iter 25 + 50 + 75 + 100 = 250 => 122.75
- set generously 3hrs for an iter search

calculation for ttt
- cannot calculate because ran on h100, 3 hours is more than enough
- under 16 bits default lora config and 57 tasks each with 301M => 8GB saved ttt ckpts



# smallgridsearch: small grid search for final performance, all seeds
iter: 5, 10, 15, 20, 25 (up to 25iter for a time under ttt 8iter)
lr: 1e-2, 5e-3, 1e-3
dropout: train, power
tokendropout: 0.05, 0.01
lambda: 0, 1e-1, 1e-2

# randomsearchfull: randomkv search
iter: 25, 50, 75, 100
lr: 1e-2, 1e-3

# randomsearchntoken: randomkv search
iter: 25, 50, 75, 100
lr: 1e-2, 1e-3

# tttsearch: ttt on iters and this new seed 45
iter: 4, 8, 12 (from paper, searching for our own sake but only use 8iter performance)
lr: 1e-4
